AWSTemplateFormatVersion: 2010-09-09

Parameters:
  WindowsInstance1:
    Type: String

  WindowsInstance2:
    Type: String
    
  AmazonLinuxInstance:
    Type: String

  RHELInstance:
    Type: String

  Prefix:
    Type: String
    
  S3BucketName:
    Type: String
    
  WaitForSuccessTimeoutSeconds:
    Type: Number


Resources:
  WindowsPatchBaseline:
    Type: AWS::SSM::PatchBaseline
    Properties:
      OperatingSystem: WINDOWS                # Operating system 
      ApprovalRules:
        PatchRules:
          - ApproveAfterDays: 7               # The number of days to wait after the patch was released, before the patch is automatically approved for patching
            ComplianceLevel: UNSPECIFIED      # Defines the compliance level for approved patches. The default value is UNSPECIFIED. Values can be CRITICAL | HIGH | INFORMATIONAL | LOW | MEDIUM
            EnableNonSecurity: false          # Indicates whether the list of approved patches includes non-security updates
            PatchFilterGroup:
              PatchFilters:
                - Key: CLASSIFICATION         # Only critical update. Values can be SecurityUpdates | CriticalUpdates
                  Values:
                    - CriticalUpdates
                - Key: MSRC_SEVERITY          # Only critical update. Values can be Critical | Important Moderate
                  Values:
                    - Critical
      Description: Windows Critical Patch Baseline.
      Name: !Sub "${Prefix}-WindowsCustomPatchBaseline"
      PatchGroups:
        - !Sub "${Prefix}-windows-patch-group"    # Patch Group tag

  AmazonLinuxPatchBaseline:
    Type: AWS::SSM::PatchBaseline
    Properties:
      OperatingSystem: AMAZON_LINUX_2         # Operating system 
      ApprovalRules:
        PatchRules:
          - ApproveAfterDays: 7               # The number of days to wait after the patch was released, before the patch is automatically approved for patching
            ComplianceLevel: UNSPECIFIED      # Defines the compliance level for approved patches. The default value is UNSPECIFIED. Values can be CRITICAL | HIGH | INFORMATIONAL | LOW | MEDIUM
            EnableNonSecurity: false          # Indicates whether the list of approved patches includes non-security updates
            PatchFilterGroup:
              PatchFilters:
                - Key: CLASSIFICATION         # Only security update. Values can be Security | Bugfix
                  Values:
                    - Security
                - Key: SEVERITY               # Only critical update. Values can be Critical | Important
                  Values:
                    - Critical
      Description: AmznLinux2 Critical Patch Baseline.
      Name: !Sub "${Prefix}-AmazonLinuxCustomPatchBaseline"   
      PatchGroups:
        - !Sub "${Prefix}-amznlinux-patch-group"      # Patch Group tag
        
  RHELPatchBaseline:
    Type: AWS::SSM::PatchBaseline
    Properties:
      OperatingSystem: REDHAT_ENTERPRISE_LINUX    # Operating system 
      ApprovalRules:
        PatchRules:
          - ApproveAfterDays: 7               # The number of days to wait after the patch was released, before the patch is automatically approved for patching
            ComplianceLevel: UNSPECIFIED      # Defines the compliance level for approved patches. The default value is UNSPECIFIED. Values can be CRITICAL | HIGH | INFORMATIONAL | LOW | MEDIUM
            EnableNonSecurity: false          # Indicates whether the list of approved patches includes non-security updates
            PatchFilterGroup:
              PatchFilters:
                - Key: CLASSIFICATION         # Only security update. Values can be Security | Bugfix
                  Values:
                    - Security
                - Key: SEVERITY               # Only critical update. Values can be Critical | Important
                  Values:
                    - Critical
      Description: RHEL Critical Patch Baseline.
      Name: !Sub "${Prefix}-RHELCustomPatchBaseline"
      PatchGroups:
        - !Sub "${Prefix}-rhel-patch-group"     # # Patch Group tag
        
  AWSRunPatchBaseline:
    Type: AWS::SSM::Association
    Properties:
      AssociationName: !Sub "${Prefix}-AWSRunPatchBaseline"
      Name: AWS-RunPatchBaseline                              # Run command to deploying/installing patches/updates for all instances
      OutputLocation:
        S3Location:
          OutputS3BucketName: !Ref S3BucketName
          OutputS3KeyPrefix: AWSRunPatchBaselineAssociation
      Parameters:
        Operation:
          - Install
      Targets:
        - Key: InstanceIds
          Values:
            - !Ref WindowsInstance1
            - !Ref WindowsInstance2
            - !Ref AmazonLinuxInstance
            - !Ref RHELInstance
      WaitForSuccessTimeoutSeconds: !Ref WaitForSuccessTimeoutSeconds


  MaintenanceWindow:
    Type: AWS::SSM::MaintenanceWindow
    DependsOn:
      - AWSRunPatchBaseline
    Properties: 
      AllowUnassociatedTargets: true      # Allow maintenance tasks scheduled for this maintenance window to run on targets that are not currently registered with this maintenance window.
      Cutoff: 1
      Description: !Sub "${Prefix}-Maintenance-Window"
      Duration: 2
      Name: !Sub "${Prefix}-MaintenanceWindow"
      Schedule: rate(5 minutes)        # https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html
      ScheduleTimezone: Asia/Kuala_Lumpur
      
  MaintenanceWindowTarget:
    Type: AWS::SSM::MaintenanceWindowTarget
    Properties: 
      Description: !Sub "${Prefix}-MaintenanceWindowTarget"
      Name: !Sub "${Prefix}-MaintenanceWindowTarget"
      ResourceType: INSTANCE
      Targets: 
        - Key: tag:Patch Group                # Define Patch group tag
          Values:
            - !Sub "${Prefix}-windows-patch-group"
            - !Sub "${Prefix}-amznlinux-patch-group"
            - !Sub "${Prefix}-rhel-patch-group"
      WindowId: !Ref MaintenanceWindow
      
  MaintenanceWindowTask:
    Type: AWS::SSM::MaintenanceWindowTask
    Properties: 
      Description: !Sub "${Prefix}-MaintenanceWindowTask"
      MaxConcurrency: 1               # The maximum number of targets this task can be run for, in parallel.
      MaxErrors: 1                    # The maximum number of errors allowed before this task stops being scheduled.
      Name: !Sub "${Prefix}-MaintenanceWindowTask"
      Priority: 1                     # The lower the number, the higher the priority.
      Targets: 
        - Key: WindowTargetIds
          Values:
            - !Ref MaintenanceWindowTarget
      TaskArn: AWS-RunPatchBaseline
      TaskInvocationParameters: 
        MaintenanceWindowRunCommandParameters:
          OutputS3BucketName: !Ref S3BucketName
          OutputS3KeyPrefix: AWSRunPatchBaselineMaintenanceWindowTask
          Parameters:
            Operation:
              - Install
      TaskType: RUN_COMMAND
      WindowId: !Ref MaintenanceWindow